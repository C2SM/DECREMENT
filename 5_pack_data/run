#!/bin/bash

if [ -z "$1" ]; then
  WAITFORJOB=""
else
  WAITFORJOB="$1"
fi

# cleanup
if [ -f .jobid ]; then
  $(squeue -j `cat .jobid` &>/dev/null) && scancel `cat .jobid`
  sleep 3
  \rm .jobid 2>/dev/null
fi
./clean

cat > job <<EOF_job
#!/bin/bash
#SBATCH --job-name=compress
#SBATCH --output=job.out
#SBATCH --nodes=1
#SBATCH --cpus-per-task=12
#SBATCH --ntasks=1
#SBATCH --partition=${QUEUE}
#SBATCH --time=${NQS_ELAPSED_COMPRESS}
#SBATCH --account=${ACCOUNT}

# Load modules
export OMP_NUM_THREADS=$CORES_PER_NODE
export CRAY_CUDA_MPS=1
module load daint-gpu
module load NCO

#Loop over directories to compress
for d in $LM_COMPRESS_DIRS; do
  ./nczip -kv input/\${d}/l{?,??}fd\${LM_YYYY_BEGIN}*.nc 
  tar --transform='s/.nz/.nc/' -cvf output/\$(dirname \$d)_\$(basename \$d)_\${LM_YYYY_BEGIN}.tar input/\$(dirname \$d)/\$(basename \$d)/*.nz
  rm input/\$(dirname \$d)/\$(basename \$d)/*.nz
done


EOF_job


# submit job
if [ -z "${WAITFORJOB}" ]; then
  jobid=$(sbatch --parsable -C gpu job)
else
  jobid=$(sbatch --parsable -C gpu --dependency=afterok:${WAITFORJOB} job)
fi

if [ $? -eq 0 -a -n "${jobid}" ]; then
  echo "${jobid}" > .jobid
  echo "${jobid}"
else
  exit 1
fi


