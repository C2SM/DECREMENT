#!/bin/bash

# Update job status
update_status "running"

#Check if output folder exists
mkdir -p $(readlink output)

# clean
./clean

# Unpack cas file for current month
module unload xalt

pushd output >&/dev/null

# Determine boundary dates
current_date=$(date -d "${LM_YYYY_BEGIN}-${LM_MM_BEGIN}-01T00:00" +%c)
current_date_sec=$(date -d "${current_date}" +%s)
end_date=$(date -d "${LM_YYYY_END}-${LM_MM_END}-01T00:00" +%c)
end_date_sec=$(date -d "${end_date}" +%s)

echo "end_date = ${end_date}"
echo "current_date = ${current_date}"

# cycle over dates by 1 month interval
while ((current_date_sec <= end_date_sec)); do
    YYYY=$(date -d "${current_date}" +%Y)
    MM=$(date -d "${current_date}" +%m)

    # build tar command
    tar_cmd="tar --skip-old-files"
    case ${LM_NL_BC_DATA_TYPE} in
        ERAInt)
            tar_file=${LM_NL_BC_DATA_PATH}/${YYYY}/ERAINT_${YYYY}_${MM}.tar.gz
            tar_cmd+=" --transform 's/caf/cas/' --transform 's/.nc/0000.nc/' -xzvf"
            tar_cmd+=" ${tar_file}  -C ."
            ;;
        ERA5)
            tar_file=${LM_NL_BC_DATA_PATH}/${YYYY}/ERA5_cas_${YYYY}_${MM}.tar
            tar_cmd+=" -xvf ${tar_file}"
            ;;
        ERA5-scClim)
            tar_file=${LM_NL_BC_DATA_PATH}/${YYYY}/ERA5_${YYYY}_${MM}_europe.tar
            tar_cmd+=" --strip-components=1 --transform 's/.nc/0000.nc/' -xvf ${tar_file}"
            ;;
        *)
            echo "LM_NL_BC_DATA_TYPE=${LM_NL_BC_DATA_TYPE} is not valid."
            echo "Currently available choices are 'ERAInt', 'ERA5' and 'ERA5-scClim'"
            exit 1
            ;;
    esac

    # execute tar command
    echo "running ${tar_cmd}"
    eval ${tar_cmd}
    status=$?

    # When done, if running with 6-hourly input, remove the unneeded files
    # Practical clean-up for CCLM2
    if [[ $? == 0 ]]; then
            if [[ $LM_NL_HINCBOUND_C == 6.0 ]]; then
                for HH in 01 02 03 04 05 07 08 09 10 11 13 14 15 16 17 19 20 21 22 23
                    rm cas${YYYY}${MM}??${HH}*.nc
                done
            fi
    fi

    # When done, if running with itype_calendar=2, modify the calendar attribute of the cas files
    # For current month and the first timestep of the next month (00h)
    # Needed for CCLM2 to sync COSMO's calendar with CLM's no_leap calendar
    if [[ $? == 0 ]]; then
        if [[ $LM_NL_ITYPE_CALENDAR == 2 ]]; then
            module load NCO
            cd output
            # modify all files of the current month
            for f in cas${YYYY}${MM}*.nc; do
                ncatted -a calendar,time,m,c,365_day $f tmp_$f
                mv tmp_$f $f
                status=$?
            done
            # modify the first file of the next month
            if [ ${MM} -lt 12 ]; then
                let MM_next=${MM}+1
                YYYY_next=${YYYY}
            else
                MM_next=01
                let YYYY_next=${YYYY}+1
            fi
            f=cas${YYYY_next}${MM_next}0100*.nc
            ncatted -a calendar,time,m,c,365_day $f tmp_$f
            mv tmp_$f $f
            cd - 1>/dev/null 2>/dev/null
        fi
    fi

    # cyle dates (Matthieu's fix)
    current_date=$(date -d "${current_date} + 1 month" +%c)
    echo "current_date = $current_date"
    current_date_sec=$(date -d "${current_date}" +%s)

    # cycle dates and make sure the next date lands in the next month (Petra's hack)
    #next_date=$(date -d "${current_date} + 1 month");
    #while (($(date -d "${next_date}" +%-m) == $(date -d "${current_date}" +%-m))); do
    #    next_date=$(date -d "${next_date} + 1 hour")
    #done
    #current_date=$next_date
    #echo "current_date = $current_date"
    #current_date_sec=$(date -d "${current_date}" +%s)

done

# Update job status
update_status "done"
