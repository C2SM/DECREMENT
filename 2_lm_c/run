#!/bin/bash

# cleanup
# -------
if [ -f .jobid ]; then
  $(squeue -j `cat .jobid` &>/dev/null) && scancel `cat .jobid`
  sleep 3
  \rm .jobid 2>/dev/null
fi
./clean

# write namelists
# ---------------
lm_c_INPUT_ORG
lm_c_INPUT_DYN
lm_c_INPUT_PHY
lm_c_INPUT_IO
lm_c_INPUT_DIA
lm_c_INPUT_INI
lm_c_INPUT_SAT
lm_c_INPUT_ASS

# Setup job
# ---------
cat > job <<EOF_job
#!/bin/bash
#SBATCH --job-name=lm_c
#SBATCH --output=job.out
#SBATCH --nodes=${LM_COSMO_NODES_C}
#SBATCH --ntasks-per-node=${LM_NTASKS_PER_NODE_COSMO}
#SBATCH --partition=${QUEUE}
#SBATCH --time=${NQS_ELAPSED_LM_C}
#SBATCH --account=${ACCOUNT}

# Initialization
set verbose
set echo

# Set this to avoid segmentation faults
ulimit -s unlimited
ulimit -a

# set environmental parameters
export MALLOC_MMAP_MAX_=0
export MALLOC_TRIM_THRESHOLD_=536870912
export OMP_NUM_THREADS=1
EOF_job

if [[ $COSMO_TARGET == "gpu" ]]; then
  cat >> job <<EOF_job
export COSMO_NPROC_NODEVICE=${NQS_NIOLM_C}
export MPICH_RDMA_ENABLED_CUDA=1
export MPICH_G2G_PIPELINE=256
# KO: Need to set path to cuda library explicitly or GPU runs fail on cuInit
# export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH\:/opt/cray/nvidia/default/lib64"
EOF_job
fi

cat >> job <<EOF_job
# echo date
date

# Run LM in case directory
${RUNCMD} -u ${EXE_COSMO}

# echo date
date

#Print accounting file
sacct -j \$SLURM_JOB_ID --format=User,JobID,Jobname,partition,state,time,start,end,elapsed,MaxRss,MaxVMSize,nnodes,ncpus,nodelist,AveCPUFreq

\rm -f .jobid >&/dev/null

# Retry if failed
if [[ "\${LM_RETRIES}" == "True" ]]; then
  if grep -q 'CLEAN UP' job.out; then
    \rm -f .retry >&/dev/null
  else
    if [ -f .retry ]; then exit 1; fi
    touch .retry
    cd .. 
    ./run_daint.sh
    exit 1
  fi
fi

EOF_job

# load spack environment
# ----------------------
if [[ -n "${LM_COSMO_ENV}" ]]; then
    source ../${LM_COSMO_ENV}
elif [[ -n "${LM_COSMO_SPEC}" ]]; then
    spack load ${LM_COSMO_SPEC}
fi

# submit job
# ----------
[[ -n "$1" ]] && dep="--dependency=afterok:${1}" || dep=""
jobid=$(sbatch --parsable -C gpu ${dep} job)

if [[ ($? == 0) && (-n "${jobid}") ]]; then
  echo "${jobid}" > .jobid
  echo "${jobid}"
else
  exit 1
fi
