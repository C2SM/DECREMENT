#!/bin/bash

# cleanup
# -------
if [[ -f .jobid ]]; then
    $(squeue -j `cat .jobid` &>/dev/null) && scancel `cat .jobid`
    sleep 3
    \rm .jobid 2>/dev/null
fi
./clean

# write namelists
# ---------------
ifs2lm_INPUT

# setup job
# ---------
cat > job <<EOF_job
#!/bin/bash
#SBATCH --job-name=ifs2lm
#SBATCH --output=job.out
#SBATCH --nodes=${LM_IFS2LM_NODES}
#SBATCH --ntasks-per-node=${LM_NTASKS_PER_NODE_INT2LM}
#SBATCH --partition=${QUEUE}
#SBATCH --time=${NQS_ELAPSED_IFS2LM}
#SBATCH --account=${ACCOUNT}

# Initialization
set verbose
set echo

# set environmental parameters
export OMP_NUM_THREADS=1
export MALLOC_MMAP_MAX_=0
export MALLOC_TRIM_THRESHOLD_=536870912
export MV2_ENABLE_AFFINITY=0

# Set this to avoid segmentation faults
ulimit -s unlimited
ulimit -a

unset G2G
export MV2_USE_CUDA=0
export MV2_USE_GPUDIRECT=0
export MV2_USE_GPUDIRECT_GDRCOPY=0

# echo date
date

# Run LM in case directory
${RUNCMD} -u ${EXE_INT2LM}

# echo date
date

sacct -j \$SLURM_JOB_ID --format=User,JobID,Jobname,partition,state,time,start,end,elapsed,MaxRss,MaxVMSize,nnodes,ncpus,nodelist,AveCPUFreq

\rm -f .jobid >&/dev/null

# Retry if failed
if [[ "\${LM_RETRIES}" == "True" ]]; then
  if grep -q CLEANUP job.out; then
    \rm -f .retry >&/dev/null
  else
    if [ -f .retry ]; then exit 1; fi
    touch .retry
    cd ..
    ./run_daint.sh
    exit 1
  fi
fi
EOF_job

# load spack environment
# ----------------------
if [[ -n "${LM_INT2LM_ENV}" ]]; then
    source ../${LM_INT2LM_ENV}
elif [[ -n "${LM_INT2LM_SPEC}" ]]; then
    spack load ${LM_INT2LM_SPEC}
fi

# submit job
# ----------
[[ -n "$1" ]] && dep="--dependency=afterok:${1}" || dep=""
jobid=$(sbatch --parsable -C gpu ${dep} job)

if [[ ($? == 0) && (-n "${jobid}") ]]; then
    echo "${jobid}" > .jobid
    echo "${jobid}"
else
    exit 1
fi
